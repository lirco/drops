'use strict';

(function () {

  function notesController($stateParams, $state, Authentication, Notes, $q, AppState, activeTabUrl, activeTabDomain, activeNote) {
    var self = this;
    self.authentication = {};
    self.authentication.user = Authentication.getUser();
    self.activeTabUrl = activeTabUrl;
    self.activeTabDomain = activeTabDomain;
    self.activeNote = activeNote;

    self.create = function() {
      //TODO: created and updated fields are generated by Mongo middleware
      var note = new Notes({
        url: self.activeTabUrl,
        domain: self.activeTabDomain,
        title: self.title,
        content: self.content,
        tags: self.tags
      });
      note.$save(function(response) {
        $state.go('home');
        //TODO: create a service that holds the notes for current url and pull it's notes on homeCtrl
        self.title = '';
        self.content = '';
        self.tags = '';
      }, function(errorResponse) {
        self.error = errorResponse.data.message;
      })
    };

    self.update = function() {
      var note = activeNote;
      note.$update(function() {
        $state.go('home');
        AppState.setActiveNote(null);
      }, function(errorResponse) {
        self.error = errorResponse.data.message;
      });
    };

    //self.find = function() {
    //  self.notes = Notes.query();
    //};

    //self.findOne = function() {
    //  self.note = Notes.get({
    //    noteId: $stateParams.noteId
    //  });
    //};

    self.getTags = function(query) {
      var d = $q.defer();
      var matchingTags = self.authentication.user.tags.filter(function(tag) {
        return tag.text.toLowerCase().indexOf(query.toLowerCase()) != -1;
      });
      d.resolve(matchingTags);
      return d.promise
    }

  }

  angular.module('clipto')
    .controller('notesController', ['$stateParams', '$state', 'Authentication', 'Notes', '$q', 'AppState', 'activeTabUrl', 'activeTabDomain', 'activeNote', notesController])

}());
