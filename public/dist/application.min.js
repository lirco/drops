"use strict";var ApplicationConfiguration=function(){var applicationModuleName="clipto",applicationModuleVendorDependencies=["envConfig","ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","ngMaterial"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("material"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),function(){function homeController(Authentication,Notes,$mdDialog,$scope,$q){var self=this,selectedTags=[];self.authentication=Authentication.getUser(),self.notes=Notes.query(),self.userTags=self.authentication.user.tags,self.sortOrder=["-modified"],self.remove=function(note){if(note){note.$remove();for(var i in self.notes)self.notes[i]===note&&self.notes.splice(i,1)}else self.note.$remove(function(){$state.go("home")})};var objIndexOf=function(arr,prop,val){for(var i=0;i<arr.length;i++)if(arr[i][prop]===val)return 1;return-1};self.click=function(tag){for(var index=-1,i=0;i<selectedTags.length;i++)if(selectedTags[i]===tag){index=i;break}-1===index?(selectedTags.push(tag),self.byTagsFilter=function(note){return-1!==objIndexOf(note.tags,"text",tag.text)}):selectedTags.splice(index,1)},self.showAll=function(){self.byTagsFilter=function(){return self.userTags}},self.noteHover=function(note){return note.showHidden=!note.showHidden},self.showDeleteDialog=function(ev,note){var confirm=$mdDialog.confirm().parent(angular.element(document.body)).title("Delete this note?").content("This note will be gone forever.").ariaLabel("Delete").ok("Delete").cancel("Keep it").targetEvent(ev);$mdDialog.show(confirm).then(function(){self.remove(note)},function(){$scope.alert="You decided to keep your note."})},self.showNote=function($event,note){function noteCtrl($scope,$mdDialog,note){function querySearch(query){var deferred,results=query?$scope.userTags.filter(createFilterFor(query)):$scope.userTags;return deferred=$q.defer(),deferred.resolve(results),deferred.promise}function createFilterFor(query){var lowercaseQuery=angular.lowercase(query);return function(tag){return 0===tag.textToLower.indexOf(lowercaseQuery)}}function loadTags(){var allTags=self.authentication.user.tags;return allTags.map(function(tag){return{textToLower:tag.text.toLowerCase(),text:tag.text,color:tag.color}})}function getRandomColor(){for(var letters="0123456789ABCDEF".split(""),color="#",i=0;6>i;i++)color+=letters[Math.floor(16*Math.random())];return color}$scope.note=note,$scope.userTags=loadTags(),$scope.querySearch=querySearch,$scope.newTagAppend=function(chip){return chip.color?{text:chip.text,color:chip.color}:{text:chip,color:getRandomColor()}},$scope.closeNote=function(){$mdDialog.hide()},$scope.updateNote=function(){note.$update(function(){$mdDialog.hide()},function(errorResponse){self.error=errorResponse.data.message})}}$mdDialog.show({parent:angular.element(document.body),targetEvent:$event,templateUrl:"modules/core/views/note.client.view.html",locals:{note:note},controller:noteCtrl})}}angular.module("core").controller("homeController",["Authentication","Notes","$mdDialog","$scope","$q",homeController])}(),function(){function sidebarController(){}angular.module("clipto").controller("sidebarController",["$scope",sidebarController])}(),function(){function TruncateFilter(){return function(input,limit){if(0>=limit)return"";if(input){var inputWords=input.split(/\s+/);inputWords.length>limit&&(input=inputWords.slice(0,limit).join(" ")+"...")}return input}}angular.module("clipto").filter("truncate",TruncateFilter)}(),function(){function AppState(Authentication){var self=this;return self.userTags=Authentication.user.tags,self.chosenTags=[],{setChosenTags:function(){}}}angular.module("core").controller("AppState",["Authentication",AppState])}(),function(){function LircoTools(){function hexToRGB(hex){var result=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);return result?[parseInt(result[1],16),parseInt(result[2],16),parseInt(result[3],16)]:null}function setTextColor(bg){var rgb=self.hexToRGB(bg),o=Math.round((299*parseInt(rgb[0])+587*parseInt(rgb[1])+114*parseInt(rgb[2]))/1e3);return o>125?"black":"white"}function getRandomColor(){for(var letters="0123456789ABCDEF".split(""),color="#",i=0;6>i;i++)color+=letters[Math.floor(16*Math.random())];return color}var self=this;self.hexToRGB=hexToRGB(),self.setTextColor=setTextColor(),self.setTextColor=getRandomColor()}angular.module("core").service("LircoTools",[LircoTools])}(),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),function(){function notesService($resource,ENV){return $resource(ENV.apiEndPoint+"/notes/:noteId",{noteId:"@_id"},{update:{method:"PUT"},getNotes:{method:"GET",isArray:!0}})}angular.module("core").factory("Notes",["$resource","ENV",notesService])}(),angular.module("material").config(["$mdThemingProvider","$mdIconProvider",function($mdThemingProvider){$mdThemingProvider.theme("default").primaryPalette("blue-grey").accentPalette("orange")}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html",controller:"passwordController",controllerAs:"passwordCtrl"}).state("signIn",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html",controller:"authenticationController",controllerAs:"authCtrl"}).state("signUp",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html",controller:"authenticationController",controllerAs:"authCtrl"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html",controller:"passwordController",controllerAs:"passwordCtrl"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html",controller:"passwordController",controllerAs:"passwordCtrl"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html",controller:"passwordController",controllerAs:"passwordCtrl"})}]),function(){function authenticationController($http,$state,Authentication,ENV){var self=this;self.authentication=Authentication,self.apiEndPoint=ENV.apiEndPoint,null!==self.authentication.user&&$state.go("home"),self.signup=function(){$http.post(ENV.apiEndPoint+"/auth/signup",self.credentials).success(function(response){Authentication.setUser(response),self.authentication.user=Authentication.getUser(),$state.go("home")}).error(function(response){self.error=response.message})},self.signin=function(){$http.post(ENV.apiEndPoint+"/auth/signin",self.credentials).success(function(response){Authentication.setUser(response),self.authentication.user=Authentication.getUser(),$state.go("home")}).error(function(response){self.error=response.message})},self.goToAuthProvider=function(name){chrome.tabs.create({url:ENV.apiEndPoint+"/auth/"+name})}}angular.module("users").controller("authenticationController",["$http","$state","Authentication","ENV",authenticationController])}(),function(){function passwordController($http,$state,Authentication,$stateParams){var self=this;self.authentication=Authentication,self.authentication.user&&$state.go("home"),self.askForPasswordReset=function(){self.success=self.error=null,$http.post("/auth/forgot",self.credentials).success(function(response){self.credentials=null,self.success=response.message}).error(function(response){self.credentials=null,self.error=response.message})},self.resetUserPassword=function(){self.success=self.error=null,$http.post("/auth/reset/"+$stateParams.token,self.passwordDetails).success(function(response){self.passwordDetails=null,Authentication.user=response,$state.go("reset-success")}).error(function(response){self.error=response.message})}}angular.module("users").controller("passwordController",["$http","$state","Authentication","$stateParams",passwordController])}(),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),function(){function Authentication(){var self=this;return self.user=window.user,{setUser:function(user){self.user=user},removeUser:function(){self.user=null},getUser:function(){return{user:self.user}}}}angular.module("users").factory("Authentication",[Authentication])}(),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]),ApplicationConfiguration.registerModule("envConfig"),angular.module("envConfig",[]).constant("ENV",{name:"production",apiEndPoint:"https://www.clipto.co"});